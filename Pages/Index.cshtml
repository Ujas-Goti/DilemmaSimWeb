@page
@model DilemmaSimWeb.Pages.IndexModel
@{
    ViewData["Title"] = "Ethical Dilemma Simulator";
    var player = Model.GetPlayer();
}

<style>
    body {
        font-family: 'Segoe UI', sans-serif;
        background-color: #f4f6f9;
        color: #333;
        margin: 30px;
    }

    .card {
        background: white;
        border-radius: 8px;
        padding: 20px;
        max-width: 600px;
        margin: 0 auto 30px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    }

    h2 {
        color: #3742fa;
    }

    label {
        font-weight: 500;
    }

    input[type="radio"] {
        margin-right: 10px;
    }

    .button {
        background-color: #3742fa;
        color: white;
        border: none;
        padding: 10px 18px;
        font-size: 16px;
        border-radius: 5px;
        margin-top: 20px;
        cursor: pointer;
    }

        .button:hover {
            background-color: #2f38e0;
        }

    .result {
        color: #2ed573;
        font-weight: bold;
        margin-top: 20px;
    }

    .summary {
        font-size: 18px;
        margin-top: 10px;
    }
</style>

<div class="card">
    @if (Model.CurrentScenario != null)
    {
        <h2>@Model.CurrentScenario.Description</h2>

        @if (!Model.ShowConsequence)
        {
            <form method="post">
                @for (int i = 0; i < Model.CurrentScenario.Choices.Count; i++)
                {
                    <div>
                        <input type="radio" id="choice_@i" name="SelectedChoice" value="@i" required />
                        <label for="choice_@i">@Model.CurrentScenario.Choices[i].Text</label>
                    </div>
                }
                <button class="button" type="submit">Submit</button>
            </form>
        }
        else
        {
            <div class="result">Consequence: @Model.GetFeedback()</div>
            <form method="post" asp-page-handler="Next">
                <button class="button" type="submit">Next Scenario</button>
            </form>
        }

        <div class="summary">
            Moral Alignment — Honesty: <strong>@player.Honesty</strong>,
            Empathy: <strong>@player.Empathy</strong>
        </div>
    }
    else
    {
        <h2>🎉 All dilemmas completed!</h2>
        <div id="piechart" style="width: 100%; height: 400px;"></div>
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script>
            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart);
            function drawChart() {
                var data = google.visualization.arrayToDataTable([
                    ['Trait', 'Score'],
                    ['Honesty', @Model.GetPlayer().Honesty],
                    ['Empathy', @Model.GetPlayer().Empathy]
                ]);
                var options = { title: 'Moral Alignment Summary' };
                var chart = new google.visualization.PieChart(document.getElementById('piechart'));
                chart.draw(data, options);
            }
        </script>
    }
</div>
